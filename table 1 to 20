 @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_table_screen);

         toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
        ActionBar actionBar = getSupportActionBar(); // or getActionBar();
        getSupportActionBar().setTitle("Write Tables 1 To 20");

        getId();
        setSpinner();
        checkResult();

        nextBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                if(currentPosition < tables.length-1) {
                    spinner.setSelection(currentPosition + 1);
                    answerImage10.setVisibility(View.INVISIBLE);
                    clearAnswer();
                }
            }
        });
    }

    public void setSpinner(){
         spinner = findViewById(R.id.spinner);
        if (spinner != null) {
            ArrayAdapter arrayAdapter = new ArrayAdapter(this, android.R.layout.simple_spinner_item, tables);
            spinner.setAdapter(arrayAdapter);

            spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                @Override
                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                    clearAnswer();
                    currentPosition = position;
                    selectedtable = Integer.parseInt(tables[position]);
                    setTable(tables[position]);

                    Toast.makeText(TableScreen.this, getString(R.string.selected_item) + " " + tables[position], Toast.LENGTH_SHORT).show();
                }

                @Override
                public void onNothingSelected(AdapterView<?> parent) {

                }
            });
        }
    }


    public void checkResult(){

        e_one.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    // code to execute when EditText loses focus

                   String table = TableNumber1.getText().toString();

                   int exactResult = selectedtable * 1;

                   if(!e_one.getText().toString().equals("")) {
                       int userResult = Integer.parseInt(e_one.getText().toString());

                       if (exactResult == userResult) {
                       //    Toast.makeText(TableScreen.this, "Right", Toast.LENGTH_LONG).show();
                           answerImage1.setImageResource(R.drawable.right_small);
                           answerImage1.setVisibility(View.VISIBLE);

                       } else {
                      //     Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                           answerImage1.setImageResource(R.drawable.wrong_small);
                           answerImage1.setVisibility(View.VISIBLE);
                       }
                   }else{
                    //   Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                       answerImage1.setImageResource(R.drawable.wrong_small);
                       answerImage1.setVisibility(View.VISIBLE);
                   }

                }
            }
        });


        e_two.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    // code to execute when EditText loses focus

                   // String table = TableNumber1.getText().toString();

                    int exactResult = selectedtable * 2;

                    if(!e_two.getText().toString().equals("")) {
                        int userResult = Integer.parseInt(e_two.getText().toString());

                        if (exactResult == userResult) {
                       //     Toast.makeText(TableScreen.this, "Right", Toast.LENGTH_LONG).show();
                            answerImage2.setImageResource(R.drawable.right_small);
                            answerImage2.setVisibility(View.VISIBLE);

                        } else {
                        //    Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                            answerImage2.setImageResource(R.drawable.wrong_small);
                            answerImage2.setVisibility(View.VISIBLE);
                        }
                    }else{
                      //  Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                        answerImage2.setImageResource(R.drawable.wrong_small);
                        answerImage2.setVisibility(View.VISIBLE);
                    }

                }
            }
        });

        e_three.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    // code to execute when EditText loses focus

                    // String table = TableNumber1.getText().toString();

                    int exactResult = selectedtable * 3;

                    if(!e_three.getText().toString().equals("")) {
                        int userResult = Integer.parseInt(e_three.getText().toString());

                        if (exactResult == userResult) {
                       //     Toast.makeText(TableScreen.this, "Right", Toast.LENGTH_LONG).show();
                            answerImage3.setImageResource(R.drawable.right_small);
                            answerImage3.setVisibility(View.VISIBLE);

                        } else {
                         //   Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                            answerImage3.setImageResource(R.drawable.wrong_small);
                            answerImage3.setVisibility(View.VISIBLE);
                        }
                    }else{
                     //   Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                        answerImage3.setImageResource(R.drawable.wrong_small);
                        answerImage3.setVisibility(View.VISIBLE);
                    }

                }
            }
        });

        e_four.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    // code to execute when EditText loses focus

                    // String table = TableNumber1.getText().toString();

                    int exactResult = selectedtable * 4;

                    if(!e_four.getText().toString().equals("")) {
                        int userResult = Integer.parseInt(e_four.getText().toString());

                        if (exactResult == userResult) {
                      //      Toast.makeText(TableScreen.this, "Right", Toast.LENGTH_LONG).show();
                            answerImage4.setImageResource(R.drawable.right_small);
                            answerImage4.setVisibility(View.VISIBLE);

                        } else {
                      //      Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                            answerImage4.setImageResource(R.drawable.wrong_small);
                            answerImage4.setVisibility(View.VISIBLE);
                        }
                    }else{
                      //  Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                        answerImage4.setImageResource(R.drawable.wrong_small);
                        answerImage4.setVisibility(View.VISIBLE);
                    }

                }
            }
        });


        e_five.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    int exactResult = selectedtable * 5;

                    if(!e_five.getText().toString().equals("")) {
                        int userResult = Integer.parseInt(e_five.getText().toString());

                        if (exactResult == userResult) {
                     //       Toast.makeText(TableScreen.this, "Right", Toast.LENGTH_LONG).show();
                            answerImage5.setImageResource(R.drawable.right_small);
                            answerImage5.setVisibility(View.VISIBLE);

                        } else {
                      //      Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                            answerImage5.setImageResource(R.drawable.wrong_small);
                            answerImage5.setVisibility(View.VISIBLE);
                        }
                    }else{
                     //   Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                        answerImage5.setImageResource(R.drawable.wrong_small);
                        answerImage5.setVisibility(View.VISIBLE);
                    }

                }
            }
        });


        e_six.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    int exactResult = selectedtable * 6;

                    if(!e_six.getText().toString().equals("")) {
                        int userResult = Integer.parseInt(e_six.getText().toString());

                        if (exactResult == userResult) {
                      //      Toast.makeText(TableScreen.this, "Right", Toast.LENGTH_LONG).show();
                            answerImage6.setImageResource(R.drawable.right_small);
                            answerImage6.setVisibility(View.VISIBLE);

                        } else {
                         //   Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                            answerImage6.setImageResource(R.drawable.wrong_small);
                            answerImage6.setVisibility(View.VISIBLE);
                        }
                    }else{
                     //   Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                        answerImage6.setImageResource(R.drawable.wrong_small);
                        answerImage6.setVisibility(View.VISIBLE);
                    }

                }
            }
        });


        e_seven.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    int exactResult = selectedtable * 7;

                    if(!e_seven.getText().toString().equals("")) {
                        int userResult = Integer.parseInt(e_seven.getText().toString());

                        if (exactResult == userResult) {
                     //       Toast.makeText(TableScreen.this, "Right", Toast.LENGTH_LONG).show();
                            answerImage7.setImageResource(R.drawable.right_small);
                            answerImage7.setVisibility(View.VISIBLE);

                        } else {
                        //    Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                            answerImage7.setImageResource(R.drawable.wrong_small);
                            answerImage7.setVisibility(View.VISIBLE);
                        }
                    }else{
                    //    Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                        answerImage7.setImageResource(R.drawable.wrong_small);
                        answerImage7.setVisibility(View.VISIBLE);
                    }

                }
            }
        });

        e_eight.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    int exactResult = selectedtable * 8;

                    if(!e_eight.getText().toString().equals("")) {
                        int userResult = Integer.parseInt(e_eight.getText().toString());

                        if (exactResult == userResult) {
                      //      Toast.makeText(TableScreen.this, "Right", Toast.LENGTH_LONG).show();
                            answerImage8.setImageResource(R.drawable.right_small);
                            answerImage8.setVisibility(View.VISIBLE);

                        } else {
                        //    Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                            answerImage8.setImageResource(R.drawable.wrong_small);
                            answerImage8.setVisibility(View.VISIBLE);
                        }
                    }else{
                    //    Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                        answerImage8.setImageResource(R.drawable.wrong_small);
                        answerImage8.setVisibility(View.VISIBLE);
                    }

                }
            }
        });

        e_nine.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    int exactResult = selectedtable * 9;

                    if(!e_nine.getText().toString().equals("")) {
                        int userResult = Integer.parseInt(e_nine.getText().toString());

                        if (exactResult == userResult) {
                       //     Toast.makeText(TableScreen.this, "Right", Toast.LENGTH_LONG).show();
                            answerImage9.setImageResource(R.drawable.right_small);
                            answerImage9.setVisibility(View.VISIBLE);

                        } else {
                          //  Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                            answerImage9.setImageResource(R.drawable.wrong_small);
                            answerImage9.setVisibility(View.VISIBLE);
                        }
                    }else{
                        //Toast.makeText(TableScreen.this, "Enter Correct Answer", Toast.LENGTH_LONG).show();
                        answerImage9.setImageResource(R.drawable.wrong_small);
                        answerImage9.setVisibility(View.VISIBLE);
                    }

                }
            }
        });

        e_ten.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (!hasFocus) {
                    int exactResult = selectedtable * 10;

                    if(!e_ten.getText().toString().equals("")) {
                        int userResult = Integer.parseInt(e_ten.getText().toString());

                        if (exactResult == userResult) {
                       //     Toast.makeText(TableScreen.this, "Right", Toast.LENGTH_LONG).show();
                            answerImage10.setImageResource(R.drawable.right_small);
                            answerImage10.setVisibility(View.VISIBLE);

                        } else {
                          //  Toast.makeText(TableScreen.this, "wrong", Toast.LENGTH_LONG).show();
                            answerImage10.setImageResource(R.drawable.wrong_small);
                            answerImage10.setVisibility(View.VISIBLE);
                        }
                    }else{
                       // Toast.makeText(TableScreen.this, "wrong", Toast.LENGTH_LONG).show();
                        answerImage10.setImageResource(R.drawable.wrong_small);
                        answerImage10.setVisibility(View.VISIBLE);
                    }

                }
            }
        });
    }



   public void setTable(String table){


        for(int i =1; i<11;i++){

            if(i==1){
                one.setText(String.valueOf(i));
                TableNumber1.setText(table);
            }
            switch (i) {
                //Case statements
                case 1: {
                    one.setText(String.valueOf(i));
                    TableNumber1.setText(table);
                    break;
                }

                case 2: {
                    two.setText(String.valueOf(i));
                    TableNumber2.setText(table);
                    break;
                }
                case 3: {
                    three.setText(String.valueOf(i));
                    TableNumber3.setText(table);
                    break;
                }
                case 4: {
                    four.setText(String.valueOf(i));
                    TableNumber4.setText(table);
                    break;
                }
                case 5: {
                    five.setText(String.valueOf(i));
                    TableNumber5.setText(table);
                    break;
                }
                case 6: {
                    six.setText(String.valueOf(i));
                    TableNumber6.setText(table);
                    break;
                }
                case 7: {
                    seven.setText(String.valueOf(i));
                    TableNumber7.setText(table);
                    break;
                }
                case 8: {
                    eight.setText(String.valueOf(i));
                    TableNumber8.setText(table);
                    break;
                }
                case 9: {
                    nine.setText(String.valueOf(i));
                    TableNumber9.setText(table);
                    break;
                }
                case 10: {
                    ten.setText(String.valueOf(i));
                    TableNumber10.setText(table);
                    break;
                }
            }
        }

    }

    public void getId(){

        TableNumber1 = (TextView) findViewById(R.id.TableNumber1);
        TableNumber2 = (TextView) findViewById(R.id.TableNumber2);
        TableNumber3 = (TextView) findViewById(R.id.TableNumber3);
        TableNumber4 = (TextView) findViewById(R.id.TableNumber4);
        TableNumber5 = (TextView) findViewById(R.id.TableNumber5);
        TableNumber6 = (TextView) findViewById(R.id.TableNumber6);
        TableNumber7 = (TextView) findViewById(R.id.TableNumber7);
        TableNumber8 = (TextView) findViewById(R.id.TableNumber8);
        TableNumber9 = (TextView) findViewById(R.id.TableNumber9);
        TableNumber10 = (TextView) findViewById(R.id.TableNumber10);

        one = (TextView) findViewById(R.id.one);
        two = (TextView) findViewById(R.id.two);
        three = (TextView) findViewById(R.id.three);
        four = (TextView) findViewById(R.id.four);
        five = (TextView) findViewById(R.id.five);
        six = (TextView) findViewById(R.id.six);
        seven = (TextView) findViewById(R.id.seven);
        eight = (TextView) findViewById(R.id.eight);
        nine = (TextView) findViewById(R.id.nine);
        ten = (TextView) findViewById(R.id.ten);

        e_one = (EditText) findViewById(R.id.e_one);
        e_two = (EditText) findViewById(R.id.e_two);
        e_three = (EditText) findViewById(R.id.e_three);
        e_four = (EditText) findViewById(R.id.e_four);
        e_five = (EditText) findViewById(R.id.e_five);
        e_six = (EditText) findViewById(R.id.e_six);
        e_seven = (EditText) findViewById(R.id.e_seven);
        e_eight = (EditText) findViewById(R.id.e_eight);
        e_nine = (EditText) findViewById(R.id.e_nine);
        e_ten = (EditText) findViewById(R.id.e_ten);

        answerImage1 = (ImageView) findViewById(R.id.answerImage1);
        answerImage2 = (ImageView) findViewById(R.id.answerImage2);
        answerImage3 = (ImageView) findViewById(R.id.answerImage3);
        answerImage4 = (ImageView) findViewById(R.id.answerImage4);
        answerImage5 = (ImageView) findViewById(R.id.answerImage5);
        answerImage6 = (ImageView) findViewById(R.id.answerImage6);
        answerImage7 = (ImageView) findViewById(R.id.answerImage7);
        answerImage8 = (ImageView) findViewById(R.id.answerImage8);
        answerImage9 = (ImageView) findViewById(R.id.answerImage9);
        answerImage10 = (ImageView) findViewById(R.id.answerImage10);

        nextBtn = (Button) findViewById(R.id.nextBtn);




    }

    public void clearAnswer(){
        e_one.setText("");
        e_two.setText("");
        e_three.setText("");
        e_four.setText("");
        e_five.setText("");
        e_six.setText("");
        e_seven.setText("");
        e_eight.setText("");
        e_nine.setText("");
        e_ten.setText("");

        answerImage1.setVisibility(View.INVISIBLE);
        answerImage2.setVisibility(View.INVISIBLE);
        answerImage3.setVisibility(View.INVISIBLE);
        answerImage4.setVisibility(View.INVISIBLE);
        answerImage5.setVisibility(View.INVISIBLE);
        answerImage6.setVisibility(View.INVISIBLE);
        answerImage7.setVisibility(View.INVISIBLE);
        answerImage8.setVisibility(View.INVISIBLE);
        answerImage9.setVisibility(View.INVISIBLE);
        answerImage10.setVisibility(View.INVISIBLE);

        e_one.clearFocus();
        e_two.clearFocus();
        e_three.clearFocus();
        e_four.clearFocus();
        e_five.clearFocus();
        e_six.clearFocus();
        e_seven.clearFocus();
        e_eight.clearFocus();
        e_nine.clearFocus();
        e_ten.clearFocus();
       // e_one.requestFocus();
    }

}
